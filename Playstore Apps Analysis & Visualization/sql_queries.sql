CREATE DATABASE playstore;
USE playstore;

CREATE TABLE apps (
	App	VARCHAR(255),
    Category VARCHAR(100),
    Rating DECIMAL(4,2),
    Reviews INT,
    Size VARCHAR(50),
    Installs INT,
    `Type` VARCHAR(10),	
    Price DECIMAL(6,3),
    Content_Rating VARCHAR(100),
    Genres VARCHAR(255),
    Last_Updated DATE,
    Current_Ver	VARCHAR(255),
    Android_Ver VARCHAR(255)
);

LOAD DATA INFILE
"F:/HiCounselor/apps_cleaned.csv"
INTO TABLE apps
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;


SELECT * FROM APPS;


CREATE TABLE reviews (
	App	TEXT,
    Translated_Review TEXT,
    Sentiment VARCHAR(25),
    Sentiment_Polarity DECIMAL(20,15),
    Sentiment_Subjectivity DECIMAL(20,15)
);

SET SESSION SQL_MODE ='';
SET SQL_SAFE_UPDATES = 0;

LOAD DATA INFILE
"F:/HiCounselor/reviews_cleaned.csv"
INTO TABLE reviews
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM reviews;
SELECT * FROM apps;

-- 1. Which apps have the highest rating in the given available dataset?
SELECT 
	app, 
    rating
FROM ( 
	SELECT 
		*,
		DENSE_RANK() OVER(ORDER BY rating DESC) AS `rank`
	FROM 
		apps) AS test
WHERE 
	`rank` = 1;
    
-- 2. What are the number of installs and reviews for the above apps? Return the apps with the highest reviews to the top.
SELECT 
	app, 
    rating,
    installs,
    reviews
FROM ( 
	SELECT 
		*,
		DENSE_RANK() OVER(ORDER BY rating DESC) AS `rank`
	FROM 
		apps) AS test
WHERE 
	`rank` = 1
ORDER BY 4 DESC;

-- 3. Which app has the highest number of reviews? Also, mention the number of reviews and category of the app.
SELECT 
	app,
    reviews,
    category
FROM 
	apps
ORDER BY 2 DESC
LIMIT 1;

/* 4. What is the total amount of revenue generated by the google play store by hosting apps? (Whenever a user buys apps from the google play store, 
the amount is considered in the revenue) */
SELECT 
	SUM(price)
FROM 
	apps
WHERE 
	type = 'paid';

/* 5. Which Category of google play store apps has the highest number of installs? 
also, find out the total number of installs for that particular category. */
SELECT 
	category, 
    installs
FROM 
	apps
GROUP BY 1
ORDER BY 2 DESC
LIMIT 2;

-- 6. Which Genre has the most number of published apps?
SELECT 
	genres,
    count(*) as No_of_apps
FROM 
	apps
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

/* 7. Provide the list of all games ordered in such a way that the game that has the highest number of installs is displayed on the top
(to avoid duplicate results use distinct). */
SELECT 
	DISTINCT(app), 
    installs
FROM 
	apps
WHERE 
	category = 'GAME'
ORDER BY 2 DESC;

-- 8. Provide the list of apps that can work on android version 4.0.3 and UP.
SELECT 
	app,
    android_ver
FROM
	apps
WHERE 
	Android_Ver LIKE '%4.0.3 and up%';

-- 9. How many apps from the given data set are free? Also, provide the number of paid apps.
SELECT 
	type, 
    COUNT(*) AS No_of_apps
FROM 
	apps
GROUP BY 1; 

-- 10. Which is the best dating app? (Best dating app is the one having the highest number of Reviews)
SELECT 
	app, 
    category,
    reviews
FROM 
	apps
WHERE 
	category = 'Dating'
ORDER BY reviews DESC
LIMIT 1;

/* 11. Get the number of reviews having positive sentiment and number of reviews having negative sentiment for the app 10 best foods for you  
and compare them. */
SELECT
	sentiment,
    COUNT(*) AS no_of_sentiments
FROM
	reviews
WHERE 
	app = '10 Best Foods for You' AND sentiment IN ('Positive', 'negative')
GROUP BY 1;

/* 12. Which comments of ASUS SuperNote have sentiment polarity and sentiment subjectivity both as 1? */
SELECT 
	*
FROM 
	reviews
WHERE
	app = 'ASUS SuperNote' AND Sentiment_Polarity = 1 AND Sentiment_Subjectivity = 1;

-- 13. Get all the neutral sentiment reviews for the app Abs Training-Burn belly fat.
SELECT 
	app,
    translated_review,
    sentiment
FROM 
	reviews
WHERE 
	sentiment = 'Neutral' and app = 'Abs Training-Burn belly fat';
    
-- 14. Extract all negative sentiment reviews for Adobe Acrobat Reader with their sentiment polarity and sentiment subjectivity.
SELECT 
	*
FROM 
	reviews
WHERE
	app = 'Adobe Acrobat Reader' and sentiment = 'Negative';